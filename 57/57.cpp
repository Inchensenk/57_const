// 57.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//Константные аргументы функции. Константный указатель. Константные параметры.
//https://www.youtube.com/watch?v=9ob_--1ZbRg
#include <iostream>
using namespace std;


/*
int* const arr передаем указатель на массив
int size хранит размерность массива
передача параметров с ключевым словом const нужно для безопастной реализации логики функции
так же модификатор const нужен 
если передать свой код другому разработчику в виде библиотеки, то он не видит как она реализована внутри
но он видит каке параметры принимает функция
и он увидит что те данные которые он передаст, принимаются как константные
то есть внутри функции с этими параметрами ничего нельзя сделать и разработчик будет знать что те данные которые он передаст будут обработаны корректно

Если кпримеру мы захотим в теле функции как  о изменить переменную size, (size=1) компилятор не допустит этого и выдаст ошибку так как параметр константный
Если бы ключевого слова const не было бы то запись size=1 сработала бы
Eckb бы запись int* const arr была бы в виде: int* arr
то можно было бы в теле функции сделать следующее: arr = new int[25]
то есть переприсвоить указателю на массив новую область памяти и тот массив котрый передавался в параметр потерялся бы и произошла бы утечка памяти


Если в параметре написать следующее const int* const arr то в этом случае нельзя будет присвоить никакое значение в массив который передан в функцию
*/
void fillArray(int* const arr, const int size)
{
	for (size_t i = 0; i < size; i++)
	{
		arr[i] = rand() % 10;
	}
}



void showArray(int* const arr, const int size)
{
	for (size_t i = 0; i < size; i++)
	{
		cout << arr[i] << "\t";
	}
	cout << endl;
}

int main()
{
	fillArray();
}

